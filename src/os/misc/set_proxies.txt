#! This needs to be automised

# add to /etc/environment
http_proxy=http://***REMOVED***
https_proxy=http://***REMOVED***
ftp_proxy=http://***REMOVED***
no_proxy="localhost,127.0.0.1,basf.net,basf-ag.de"

HTTP_PROXY=http://***REMOVED***
HTTPS_PROXY=http://***REMOVED***
FTP_PROXY=http://***REMOVED***
NO_PROXY="localhost,127.0.0.1,basf.net,basf-ag.de"

# add to /etc/apt/apt.conf
Acquire::http::proxy "http://***REMOVED***/";
Acquire::https::proxy "https://***REMOVED***/";
Acquire::socks::proxy "socks://***REMOVED***/";

# in /home/edisz/.gitconfig
[user]
        email = eduardszoecs@gmail.com
        name = EDiLD
[http]
        proxy = http://***REMOVED***/
[credential]
        helper = cache --timeout=3600
[push]
        default = simple



# add to /home/edisz/.ssh/config
Host github.com
	ProxyCommand		nc -X connect -x ***REMOVED*** %h %p
	ServerAliveInterval	10
Host <gitlab at work>
	ProxyCommand		nc -X connect -x ***REMOVED*** %h %p
	ServerAliveInterval	10


# in /etc/default/docker
export http_proxy="http://***REMOVED***/"

#or run
Create a systemd drop-in directory for the docker service:
$ mkdir -p /etc/systemd/system/docker.service.d
Create a file called /etc/systemd/system/docker.service.d/http-proxy.conf that adds the HTTP_PROXY environment variable:
[Service]
Environment="HTTP_PROXY=http://proxy.example.com:80/"
If you have internal Docker registries that you need to contact without proxying you can specify them via the NO_PROXY environment variable:
Environment="HTTP_PROXY=http://proxy.example.com:80/" "NO_PROXY=localhost,127.0.0.1,docker-registry.somecorporation.com"
Flush changes:
$ sudo systemctl daemon-reload
Verify that the configuration has been loaded:
$ systemctl show --property=Environment docker
Environment=HTTP_PROXY=http://proxy.example.com:80/
Restart Docker:
$ sudo systemctl restart docker